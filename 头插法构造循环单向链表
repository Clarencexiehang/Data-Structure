#include<stdio.h>
#include<stdlib.h>

struct LNode{
	int Data;
	struct LNode* next;
};

struct LNode *Create(struct LNode *L){
	L=(struct LNode*)malloc(sizeof(struct LNode));
	L->next=NULL;
	return L;
}

void Insert_Head(struct LNode *L,int ins){
	struct LNode *p=(struct LNode*)malloc(sizeof(struct LNode));
	p->Data=ins;
	if(L->next==NULL){
		L->next=p;
		p->next=L;
	} 
	else{
		p->next=L->next;
		L->next=p;
	}
}

void DeleteTail(struct LNode *L){
	struct LNode *p=L->next;
	while(p->next->next!=L){
		p=p->next;
	}
	free(p->next);
	p->next=L;
}

int LengthList(struct LNode *ptr){
	struct LNode *l;
	l=ptr;
	int len=0;
	while(l->next!=ptr){
		len++;
		l=l->next;
	} 
	return len;
}

struct LNode *SortList(struct LNode *p){
	int i,j;int temp=0;
	struct LNode *l;
	int size=LengthList(p);
	for(i=0;i<size-1;i++){
		l=p->next;
		for(j=0;j<size-1-i;j++){
			if((l->Data)>(l->next->Data)){
			    temp=l->Data;
				l->Data=l->next->Data;
				l->next->Data=temp;
			}
			l=l->next;
		}
	}
	return p;
}

void Print(struct LNode *L){
	struct LNode *p=L->next;
	while(p!=L){
		printf("%d ", p->Data);
		p=p->next;
	}
}

int main(){
	struct LNode *L;
	L=Create(L);
	int i,ins=999;
	while(ins!=0){
		Insert_Head(L,ins);
		scanf("%d",&ins);
	}
	DeleteTail(L);//删除999 
	DeleteTail(L);//删除尾结点 
	SortList(L);
	Print(L);
	return 0;
}
